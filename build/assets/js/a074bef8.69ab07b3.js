"use strict";(self.webpackChunktinasaurus=self.webpackChunktinasaurus||[]).push([[7392],{2666:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"working-with-the-schema-registry/working-with-the-schema-registry","title":"Working with the Schema Registry","description":"A Schema Registry is a centralized repository used to store and manage schemas for structured data formats. It ensures consistency and compatibility by providing a single source of truth for schema definitions, enabling seamless data serialization, validation, and version control. Typically, it is used in systems where data needs to be shared or processed across multiple applications, ensuring that all parties adhere to a predefined structure for data exchange.","source":"@site/docs/working-with-the-schema-registry/working-with-the-schema-registry.mdx","sourceDirName":"working-with-the-schema-registry","slug":"/working-with-the-schema-registry/","permalink":"/docs/working-with-the-schema-registry/","draft":false,"unlisted":false,"editUrl":"https://tinasaurus.vercel.app/admin/#/collections/doc/docs/working-with-the-schema-registry/working-with-the-schema-registry.mdx","tags":[],"version":"current","frontMatter":{"title":"Working with the Schema Registry"},"sidebar":"tutorialSidebar","previous":{"title":"Distributing Access Tokens","permalink":"/docs/api-manager/distributing-access-tokens"},"next":{"title":"Managing Schemas","permalink":"/docs/working-with-the-schema-registry/managing-schemas"}}');var t=i(4848),r=i(8453);const a={title:"Working with the Schema Registry"},c="Working with the Schema Registry",l={},o=[{value:"<strong>1. Creating a Schema</strong>",id:"1-creating-a-schema",level:3},{value:"<strong>2. Publishing a Schema</strong>",id:"2-publishing-a-schema",level:3},{value:"<strong>3. Managing Versions</strong>",id:"3-managing-versions",level:3},{value:"<strong>4. Updating Schema in Applications</strong>",id:"4-updating-schema-in-applications",level:3},{value:"<strong>5. Promoting a Schema</strong>",id:"5-promoting-a-schema",level:3}];function h(e){const s={h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"working-with-the-schema-registry",children:"Working with the Schema Registry"})}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.strong,{children:"Schema Registry"})," is a centralized repository used to store and manage schemas for structured data formats. It ensures consistency and compatibility by providing a single source of truth for schema definitions, enabling seamless data serialization, validation, and version control. Typically, it is used in systems where data needs to be shared or processed across multiple applications, ensuring that all parties adhere to a predefined structure for data exchange."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"1-creating-a-schema",children:(0,t.jsx)(s.strong,{children:"1. Creating a Schema"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Importing Schema"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Start by importing the desired schema (e.g., BookSchema)."}),"\n",(0,t.jsx)(s.li,{children:"The schema can be edited before saving."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Saving as Draft"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Initially, the schema is saved as a draft version."}),"\n",(0,t.jsx)(s.li,{children:"Changes to the schema (e.g., renaming it to CompanySchema) will override the existing draft."}),"\n",(0,t.jsx)(s.li,{children:"You can either publish or discard the draft."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SchemaRegistry-Import.gif",alt:""}),(0,t.jsx)("figcaption",{})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"2-publishing-a-schema",children:(0,t.jsx)(s.strong,{children:"2. Publishing a Schema"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Once the schema is finalized, publish it as the ",(0,t.jsx)(s.strong,{children:"initial version"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["After publishing","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The schema enters the ",(0,t.jsx)(s.strong,{children:"Published State"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["A side panel displays","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Schema version."}),"\n",(0,t.jsx)(s.li,{children:"Comments."}),"\n",(0,t.jsx)(s.li,{children:"Publication timestamp."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SR-publish-(1).gif",alt:""}),(0,t.jsx)("figcaption",{})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"3-managing-versions",children:(0,t.jsx)(s.strong,{children:"3. Managing Versions"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Previewing and Deprecating"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Use the ",(0,t.jsx)(s.strong,{children:"Preview"})," option to view the schema details."]}),"\n",(0,t.jsxs)(s.li,{children:["Use the ",(0,t.jsx)(s.strong,{children:"Deprecate"})," option to mark a version as deprecated. This is a soft delete, meaning the version is not removed but marked as deprecated."]}),"\n",(0,t.jsxs)(s.li,{children:["Note: The latest version cannot be deprecated",(0,t.jsx)(s.strong,{children:"."})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SR-Preview-and-Depricate.gif",alt:""}),(0,t.jsx)("figcaption",{})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Editing and Creating New Versions"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Editing a published schema creates a new draft."}),"\n",(0,t.jsx)(s.li,{children:"When published, this draft becomes a new version."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SR-Edit.gif",alt:""}),(0,t.jsx)("figcaption",{})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Version Control"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"You can duplicate a previous version for reuse or modification."}),"\n",(0,t.jsx)(s.li,{children:"The application alerts you if you're not using the latest version of the schema."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SR-Version-(1).gif",alt:""}),(0,t.jsx)("figcaption",{})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"4-updating-schema-in-applications",children:(0,t.jsx)(s.strong,{children:"4. Updating Schema in Applications"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Go to the ",(0,t.jsx)(s.strong,{children:"Schema Registry"})," and search for the schema (e.g., BookSchema)."]}),"\n",(0,t.jsxs)(s.li,{children:["Applications can import specific versions of a schema","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"If an older version is in use, alerts notify you about newer versions available."}),"\n",(0,t.jsx)(s.li,{children:"You can update to the latest version, but once updated, reverting to a deprecated version is not allowed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SR-update.gif",alt:""}),(0,t.jsx)("figcaption",{})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"5-promoting-a-schema",children:(0,t.jsx)(s.strong,{children:"5. Promoting a Schema"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Create a copy of the application schema."}),"\n",(0,t.jsxs)(s.li,{children:["Use the ",(0,t.jsx)(s.strong,{children:"Promote"})," option to","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Add the schema to a collection."}),"\n",(0,t.jsx)(s.li,{children:"Validate it for uniqueness in both collections and applications."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["After promotion","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The schema becomes a ",(0,t.jsx)(s.strong,{children:"global schema"}),"."]}),"\n",(0,t.jsx)(s.li,{children:"It is added to the appropriate collection."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("figure",{children:[(0,t.jsx)("img",{src:"/img/assets/SR-Promote.gif",alt:""}),(0,t.jsx)("figcaption",{})]})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>c});var n=i(6540);const t={},r=n.createContext(t);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);